name: Frontend Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      env:
        VITE_API_URL: http://${{ secrets.EC2_HOST }}/api
      run: npm run build
    
    - name: Copy build files
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "dist/*"
        target: "/home/ubuntu/app/pullit/frontend-builds/${{ github.sha }}"
        strip_components: 1
    
    - name: Deploy with zero downtime
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ubuntu/app/pullit
          
          # 타임스탬프 생성
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          BUILD_ID="${{ github.sha }}"
          
          # 새 빌드 디렉토리 확인
          if [ ! -d "frontend-builds/${BUILD_ID}" ]; then
            echo "❌ Build directory not found!"
            exit 1
          fi
          
          # 현재 frontend가 심볼릭 링크인지 확인
          if [ -L "frontend/dist" ]; then
            # 이전 빌드 디렉토리 저장
            OLD_BUILD=$(readlink frontend/dist)
            echo "Current build: $OLD_BUILD"
          fi
          
          # dist 디렉토리가 없으면 생성
          mkdir -p frontend
          
          # 최초 배포인지 확인
          if [ ! -e "frontend/dist" ]; then
            echo "🚀 First deployment detected!"
            # 최초 배포 시 직접 복사
            cp -r frontend-builds/${BUILD_ID} frontend/dist
          else
            # 새 빌드로 심볼릭 링크 원자적 전환
            ln -sfn $(pwd)/frontend-builds/${BUILD_ID} frontend/dist
          fi
          
          # 권한 설정
          chmod -R 755 frontend-builds/${BUILD_ID}
          chmod 755 frontend/
          
          # Nginx 설정 리로드 (무중단)
          if docker ps | grep -q pullit-nginx; then
            docker exec pullit-nginx nginx -s reload
            echo "✅ Nginx reloaded - Zero downtime deployment successful!"
          else
            echo "⚠️  Nginx not running - Starting services..."
            docker-compose -f docker-compose-server.yml up -d
          fi
          
          # 오래된 빌드 정리 (최근 3개만 유지)
          cd frontend-builds
          ls -t | tail -n +4 | xargs -r rm -rf
          
          echo "Frontend deployment completed successfully!"
          echo "Build ID: ${BUILD_ID}"