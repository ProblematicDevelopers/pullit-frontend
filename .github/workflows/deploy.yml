name: Frontend Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      env:
        VITE_API_URL: http://${{ secrets.EC2_HOST }}/api
      run: npm run build
    
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # 새 빌드 파일을 임시 디렉토리로 복사
          mkdir -p /home/ubuntu/app/pullit/frontend-new
          
    - name: Copy build files
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "dist/*"
        target: "/home/ubuntu/app/pullit/frontend-new"
        strip_components: 1
    
    - name: Switch frontend with zero downtime
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ubuntu/app/pullit
          
          # 기존 frontend를 백업
          if [ -d "frontend" ]; then
            rm -rf frontend-old
            mv frontend frontend-old
          fi
          
          # 새 frontend로 전환
          mv frontend-new frontend
          
          # 권한 설정
          chmod -R 755 frontend/
          
          # Nginx 컨테이너가 실행 중이면 자동으로 새 파일 서빙
          # 첫 배포가 아닌 경우 무중단 배포 완료
          
          # Docker 실행 상태 확인 및 처리
          cd /home/ubuntu/app/pullit
          if docker ps | grep -q pullit-nginx; then
            echo "✅ Nginx is running - Zero downtime deployment successful!"
            # 브라우저 캐시 무효화를 위한 reload (선택사항)
            docker exec pullit-nginx nginx -s reload || true
          else
            echo "⚠️  Nginx not running - Starting docker-compose..."
            docker-compose up -d
          fi
          
          echo "Frontend deployment completed successfully!"